<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Integrate an additional WPF map</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="e9f559c7-394c-4858-8a40-4744d2fc7200" /><meta name="Description" content="This section demonstrates different ways how to integrate a WPF based map in an application. Besides a more static definition by XAML, it is possible to define any number of maps by code." /><meta name="Microsoft.Help.ContentType" content="Samples" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">PTV xServer .NET<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\9e985ce7-8d43-434f-82bb-260b742553c1.htm" title="PTV xServer .NET" tocid="roottoc">PTV xServer .NET</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/a5bc5d46-5eb8-4b50-be53-1ffa3f7bc7f4.htm" title="How To ..." tocid="a5bc5d46-5eb8-4b50-be53-1ffa3f7bc7f4">How To ...</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5ff21e55-6f37-451d-acae-9321ca31836d.htm" title="XServer Connection" tocid="5ff21e55-6f37-451d-acae-9321ca31836d">XServer Connection</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/714dc4ba-10d3-4a8d-a55d-6210630ff6eb.htm" title="Show Here Satellite View" tocid="714dc4ba-10d3-4a8d-a55d-6210630ff6eb">Show Here Satellite View</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4926f311-8333-4b18-b509-70c1d876d5eb.htm" title="Show Clusters" tocid="4926f311-8333-4b18-b509-70c1d876d5eb">Show Clusters</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/101dba72-fb36-468b-aa99-4b9c5bbfb62f.htm" title="Add Different Shapes" tocid="101dba72-fb36-468b-aa99-4b9c5bbfb62f">Add Different Shapes</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/e9f559c7-394c-4858-8a40-4744d2fc7200.htm" title="Integrate an additional WPF map" tocid="e9f559c7-394c-4858-8a40-4744d2fc7200">Integrate an additional WPF map</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6b437145-f3ed-4267-a3fc-e71737e6db65.htm" title="Add a GeoRSS Layer" tocid="6b437145-f3ed-4267-a3fc-e71737e6db65">Add a GeoRSS Layer</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d705537f-f7fe-435c-bd80-d4d399ee4410.htm" title="Show Map&amp;Market Data" tocid="d705537f-f7fe-435c-bd80-d4d399ee4410">Show Map&amp;Market Data</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/427ab62e-f02d-4e92-9c26-31e0f89d49c5.htm" title="Show a Shape File Content" tocid="427ab62e-f02d-4e92-9c26-31e0f89d49c5">Show a Shape File Content</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2f6d7ed1-b136-44dc-97c1-3f2c640c2134.htm" title="Add a WMS Layer" tocid="2f6d7ed1-b136-44dc-97c1-3f2c640c2134">Add a WMS Layer</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fccd9937-aa04-4803-936d-7796cb966963.htm" title="Selection" tocid="fccd9937-aa04-4803-936d-7796cb966963">Selection</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/90fd0772-df3b-473b-a305-6ee939193c7f.htm" title="Apply a UI Theme" tocid="90fd0772-df3b-473b-a305-6ee939193c7f">Apply a UI Theme</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/fe48cb51-c6ce-487e-b4c0-168537c184c3.htm" title="Geocode an Address" tocid="fe48cb51-c6ce-487e-b4c0-168537c184c3">Geocode an Address</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/e7c12cc4-3819-470e-867a-b521bee43cf0.htm" title="Elementary Routing" tocid="e7c12cc4-3819-470e-867a-b521bee43cf0">Elementary Routing</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e4c416a0-9573-4df8-b733-3bf72539ef0f.htm" title="Drag&amp;Drop Routing" tocid="e4c416a0-9573-4df8-b733-3bf72539ef0f">Drag&amp;Drop Routing</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/34f6b520-454f-4a6a-b0ae-00fc77da512b.htm" title="Tour Planning" tocid="34f6b520-454f-4a6a-b0ae-00fc77da512b">Tour Planning</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/eb8e522c-5ed2-4481-820f-bfd74ee2aeb8.htm" title="Use the Map Gadgets" tocid="eb8e522c-5ed2-4481-820f-bfd74ee2aeb8">Use the Map Gadgets</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fdaa5363-b092-43cc-950e-6f120dee0d92.htm" title="Set the Map Location" tocid="fdaa5363-b092-43cc-950e-6f120dee0d92">Set the Map Location</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b55f5d50-a421-4951-bc01-d5fb85c94f54.htm" title="Add an XMapServer Layer" tocid="b55f5d50-a421-4951-bc01-d5fb85c94f54">Add an XMapServer Layer</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/91617b6b-1086-4c05-a1ce-4c64f8bc7dcd.htm" title="Add a Custom Layer" tocid="91617b6b-1086-4c05-a1ce-4c64f8bc7dcd">Add a Custom Layer</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/88521cb3-0770-4f9c-9e47-74b6ea02b6eb.htm" title="Build an ActiveX Control" tocid="88521cb3-0770-4f9c-9e47-74b6ea02b6eb">Build an ActiveX Control</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1cdf95ec-699c-4d92-bc98-df93503e5a4e.htm" title="Build a C++/MFC application" tocid="1cdf95ec-699c-4d92-bc98-df93503e5a4e">Build a C++/MFC application</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Integrate an additional WPF map</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>
        This section demonstrates different ways how to integrate a WPF based map in an application. Besides a more
        static definition by XAML, it is possible to define any number of maps by code.
      </p><p>This page contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#IntegrateWPFMap">How to integrate a WPF map in an application</a></li><li class="outlineSectionEntry"><a href="#AddingWPFMapViaXAML">Adding a WPF map using XAML</a></li><li class="outlineSectionEntry"><a href="#AddingWPFMapProgrammatically">Adding a WPF map programmatically</a></li><li class="outlineSectionEntry"><a href="#AddingMapWonWindowsForm">Adding a map on a Windows Form</a></li><li class="outlineSectionEntry"><a href="#seeAlsoSection">See Also</a></li></ul></div><div class="collapsibleAreaRegion" id="IntegrateWPFMap"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />How to integrate a WPF map in an application</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
          An application can be enriched by a map in different ways:
        </p><ul><li><p>inserting a WPF Map Control using XAML</p></li><li><p>adding a WPF Map Control programmatically</p></li><li><p>adding a WinForm Map Control on a windows form</p></li></ul><p>
          The following screenshot shows how even two maps can be displayed next to each other in one application.
          The use case <span class="term">Additional WPF map</span> shows how to do this.
        </p><div class="mediaCenter"><img alt="Insert Map Control" src="../media/InsertMapControl.png" /><div class="caption">Additional WPF map</div></div></div><div class="collapsibleAreaRegion" id="AddingWPFMapViaXAML"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Adding a WPF map using XAML</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          At first, XAML integration will be explained; the following MainWindow.xaml extract shows the important parts:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EADADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EADADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EADADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">&lt;Window x:Class=<span class="highlight-literal">"Ptv.XServer.Demo.MainWindow"</span>
...
xmlns:map=<span class="highlight-literal">"clr-namespace:Ptv.XServer.Controls.Map;assembly=Ptv.XServer.Controls.Map"</span>
Loaded=<span class="highlight-literal">"Window_Loaded"</span>&gt;
&lt;Grid x:Name=<span class="highlight-literal">"LayoutRoot"</span>&gt;
&lt;map:WpfMap x:Name=<span class="highlight-literal">"wpfMap"</span> Grid.Column=<span class="highlight-literal">"0"</span> Background=<span class="highlight-literal">"#FFE5E8E4"</span> UseDefaultTheme=<span class="highlight-literal">"True"</span> LayoutUpdated=<span class="highlight-literal">"wpfMap_LayoutUpdated"</span>/&gt;
&lt;/Grid&gt;
&lt;/Window&gt;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EADADAAA");</script><p>
          Besides the definition of the WpfMap namespace in the Window tag, the XAML file defines a callback to
          initialize the WPF map. The callback is used when the main window is loaded. The rest of XAML simply
          positions the map in a Grid control. Like this, the whole window will be filled by the rendered map.
        </p><p>
          The initialization of the WPF map can take customer requirements into consideration. There are some
          properties which can be set directly by XAML, others can be added calling certain methods in the
          code. In the following code sample the base layers are added and the visible map section is centered on
          Karlsruhe (Germany) by latitude/longitude parameters:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Initialize map control with xMap layers, especially the URL of the xServer. </span>
<span class="highlight-comment">// For layers provided on Azure xServers, an xToken has to be taken into consideration. This information is </span>
<span class="highlight-comment">// managed in the Usecase base class, which is globally available for the application and all other use cases.</span>

<span class="highlight-keyword">if</span> (!UseCase.ManagedAuthentication.IsOk)
    <span class="highlight-keyword">return</span> <span class="highlight-keyword">false</span>;

<span class="highlight-comment">// Safe the layer order for realigning.</span>
<span class="highlight-keyword">var</span> layerOrder = map.Layers.Select(layer =&gt; layer.Name).ToList();

<span class="highlight-comment">// Remove only layers which are potentially inserted by this method.</span>
map.Layers.RemoveXMapBaseLayers();
map.Layers.Remove(map.Layers[<span class="highlight-literal">"Poi"</span>]);
<span class="highlight-keyword">if</span> (map.Layers[<span class="highlight-literal">"Feature Layer routes"</span>] != <span class="highlight-keyword">null</span>) map.Layers.Remove(map.Layers[<span class="highlight-literal">"Feature Layer routes"</span>]);
map.Layers.InsertXMapBaseLayers(UseCase.ManagedAuthentication.XMapMetaInfo);

<span class="highlight-comment">// Feature Layer settings </span>
featureLayerUseCase = <span class="highlight-keyword">new</span> FeatureLayerUseCase(map)
{
    ScenarioChanged = (theme, isBegin) =&gt; 
    {
        Cursor = isBegin ? Cursors.AppStarting : Cursors.Arrow;
        ComboBoxBy(theme).IsEnabled = CheckBoxBy(theme).IsEnabled = !isBegin;
    }
};

InitFeatureLayer(featureLayerUseCase.AvailableTrafficIncidents, TrafficIncidentsComboBox, TrafficIncidentsCheckBox);
InitFeatureLayer(featureLayerUseCase.AvailableTruckAttributes, TruckAttributesComboBox, TruckAttributesCheckBox);
InitFeatureLayer(featureLayerUseCase.AvailableRestrictionZones, RestrictionZonesComboBox, RestrictionZonesCheckBox);
InitFeatureLayer(featureLayerUseCase.AvailablePreferredRoutes, PreferredRoutesComboBox, PreferredRoutesCheckBox);
InitFeatureLayer(featureLayerUseCase.AvailableSpeedPatterns, SpeedPatternsComboBox, SpeedPatternsCheckBox);

<span class="highlight-comment">// Triggers the MapProfile use case to change the maps profile.</span>
ProfileOKButton_OnClick(<span class="highlight-keyword">null</span>, <span class="highlight-keyword">null</span>);

<span class="highlight-comment">// add POI layer (if available)</span>
<span class="highlight-keyword">var</span> url = UseCase.ManagedAuthentication.XMapMetaInfo.Url;
<span class="highlight-keyword">if</span> (!(XServerUrl.IsDecartaBackend(url) 
    || XServerUrl.IsXServerInternet(url) &amp;&amp; url.Contains(<span class="highlight-literal">"china"</span>)))
{
    <span class="highlight-preprocessor">#region</span> doc:AdditionalLayerCreation
    map.InsertPoiLayer(UseCase.ManagedAuthentication.XMapMetaInfo, <span class="highlight-literal">"Poi"</span>, <span class="highlight-literal">"default.points-of-interest"</span>, <span class="highlight-literal">"Points of interest"</span>);
    <span class="highlight-preprocessor">#endregion</span>
}

<span class="highlight-comment">// recreate the old layer order if the set of layers has not changed</span>
<span class="highlight-keyword">if</span> (map.Layers.All(layer =&gt; layerOrder.Contains(layer.Name)))
{
    <span class="highlight-keyword">var</span> layers = layerOrder
        .Where(name =&gt; map.Layers[name] != <span class="highlight-keyword">null</span>)
        .Select((name, index) =&gt; <span class="highlight-keyword">new</span> { newIndex = index, oldIndex = map.Layers.IndexOf(map.Layers[name]) });

    <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> item <span class="highlight-keyword">in</span> layers)
        map.Layers.Move(item.oldIndex, item.newIndex);
}

<span class="highlight-keyword">if</span> (UseCase.ManagedAuthentication.XMapMetaInfo.GetRegion() == Region.eu)
    map.SetMapLocation(<span class="highlight-keyword">new</span> Point(<span class="highlight-number">8.4</span>, <span class="highlight-number">49</span>), <span class="highlight-number">10</span>); <span class="highlight-comment">// Center in Karlsruhe</span>
<span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (UseCase.ManagedAuthentication.XMapMetaInfo.GetRegion() == Region.na)
    map.SetMapLocation(<span class="highlight-keyword">new</span> Point(<span class="highlight-number">-74.11</span>, <span class="highlight-number">40.93</span>), <span class="highlight-number">10</span>); <span class="highlight-comment">// Center in New York</span>
<span class="highlight-keyword">else</span> <span class="highlight-keyword">if</span> (UseCase.ManagedAuthentication.XMapMetaInfo.GetRegion() == Region.au)
    map.SetMapLocation(<span class="highlight-keyword">new</span> Point(<span class="highlight-number">149.16</span>, <span class="highlight-number">-35.25</span>), <span class="highlight-number">10</span>); <span class="highlight-comment">// Center in Canberra</span>
<span class="highlight-keyword">else</span>
    map.SetMapLocation(<span class="highlight-keyword">new</span> Point(<span class="highlight-number">0</span>, <span class="highlight-number">33</span>), <span class="highlight-number">1.8</span>); <span class="highlight-comment">// Center on equator, meridian</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAADAAA");</script></div><div class="collapsibleAreaRegion" id="AddingWPFMapProgrammatically"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Adding a WPF map programmatically</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
          A WPF map can also be created dynamically without any XAML definitions. This can be reasonable, if a
          map should be shown in a minor part of the whole application. The code is similar to the one mentioned
          above, when the main window is loaded:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> dynamicWpfMap = <span class="highlight-keyword">new</span> WpfMap();
<span class="highlight-keyword">if</span> (!ConfigureWPFMap(dynamicWpfMap))
    <span class="highlight-keyword">return</span>;

<span class="highlight-comment">// First a grid splitter is created and inserted into MapGrid</span>
<span class="highlight-keyword">var</span> splitter = <span class="highlight-keyword">new</span> GridSplitter
{
    Background = <span class="highlight-keyword">new</span> SolidColorBrush(Color.FromArgb(<span class="highlight-number">0xff</span>, <span class="highlight-number">0x5B</span>, <span class="highlight-number">0x5B</span>, <span class="highlight-number">0x5B</span>)),
    Width = <span class="highlight-number">4</span>,
    HorizontalAlignment = HorizontalAlignment.Center,
    VerticalAlignment = VerticalAlignment.Stretch
};
MapGrid.ColumnDefinitions.Add(<span class="highlight-keyword">new</span> ColumnDefinition { Width = <span class="highlight-keyword">new</span> GridLength(<span class="highlight-number">4</span>) });

<span class="highlight-comment">// Define the gridsplitters's position in the grid...</span>
Grid.SetRow(splitter, <span class="highlight-number">0</span>);
Grid.SetColumn(splitter, <span class="highlight-number">1</span>);
MapGrid.Children.Add(splitter);

<span class="highlight-comment">// Insertion into the grid:</span>
<span class="highlight-comment">// Define an additional column for the second map control</span>
MapGrid.ColumnDefinitions.Add(<span class="highlight-keyword">new</span> ColumnDefinition { MinWidth = <span class="highlight-number">50</span> });

<span class="highlight-comment">// Define the map control's position in the grid...</span>
Grid.SetRow(dynamicWpfMap, <span class="highlight-number">0</span>);
Grid.SetColumn(dynamicWpfMap, <span class="highlight-number">2</span>);

<span class="highlight-comment">// ... and add it finally</span>
MapGrid.Children.Add(dynamicWpfMap);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAACAAA");</script></div><div class="collapsibleAreaRegion" id="AddingMapWonWindowsForm"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Adding a map on a Windows Form</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
          The PTV xServer .NET map can also be added to a Windows Forms application. A wrapper was added so that the
          map control is automatically installed in the toolbox of Visual Studio. To add a map on the form, just
          choose the "FormsMap" group in the toolbox,
        </p><div class="mediaCenter"><img alt="Toolbox" src="../media/Toolbox.PNG" /><div class="caption">FormsMap in the toolbox</div></div><p>drag it to the form and drop it there.</p><div class="mediaCenter"><img alt="Forms Map" src="../media/FormsMap.PNG" /><div class="caption">FormsMap after Drag &amp; Drop</div></div><p>
          After having added the FormsMap on the form, the data source URL and the center of
          the map has to be specified. The following code shows how to do that.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">formsMap1.XmapUrl = <span class="highlight-literal">"https://xmap-eu-n.cloud.ptvgroup.com/xmap/ws/XMap"</span>; <span class="highlight-comment">// the Azure deployment of PTV xMap server (allowed to be used for demonstration purposes only)</span>
formsMap1.Center = <span class="highlight-keyword">new</span> System.Windows.Point(<span class="highlight-number">8.4</span>, <span class="highlight-number">49</span>); <span class="highlight-comment">// center on Karlsruhe (Germany)</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABAAA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Ptv_XServer_Controls_Map_WpfMap.htm">WpfMap</a></div><div class="seeAlsoStyle"><a href="T_Ptv_XServer_Controls_Map_FormsMap.htm">FormsMap</a></div></div></div></div><div id="pageFooter" class="pageFooter">Visit our website at <a href="http://www.ptvgroup.com">www.ptvgroup.com</a> or browse to <a href="http://xserver.ptvgroup.com">xserver.ptvgroup.com</a> for the latest information on our developer components.<p>Copyright (c) PTV Group, Karlsruhe, Germany.</p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:developer%40ptvgroup.com?Subject=PTV xServer .NET">developer@ptvgroup.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>