<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Show a Shape File Content</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="427ab62e-f02d-4e92-9c26-31e0f89d49c5" /><meta name="Description" content="This page explains the ShapeFile use case which is provided with PTV xServer .NET. The Shape File sample shows how shape files can be displayed." /><meta name="Microsoft.Help.ContentType" content="Samples" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">PTV xServer .NET<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\9e985ce7-8d43-434f-82bb-260b742553c1.htm" title="PTV xServer .NET" tocid="roottoc">PTV xServer .NET</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/a5bc5d46-5eb8-4b50-be53-1ffa3f7bc7f4.htm" title="How To ..." tocid="a5bc5d46-5eb8-4b50-be53-1ffa3f7bc7f4">How To ...</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5ff21e55-6f37-451d-acae-9321ca31836d.htm" title="XServer Connection" tocid="5ff21e55-6f37-451d-acae-9321ca31836d">XServer Connection</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/714dc4ba-10d3-4a8d-a55d-6210630ff6eb.htm" title="Show Here Satellite View" tocid="714dc4ba-10d3-4a8d-a55d-6210630ff6eb">Show Here Satellite View</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4926f311-8333-4b18-b509-70c1d876d5eb.htm" title="Show Clusters" tocid="4926f311-8333-4b18-b509-70c1d876d5eb">Show Clusters</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/101dba72-fb36-468b-aa99-4b9c5bbfb62f.htm" title="Add Different Shapes" tocid="101dba72-fb36-468b-aa99-4b9c5bbfb62f">Add Different Shapes</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e9f559c7-394c-4858-8a40-4744d2fc7200.htm" title="Integrate an additional WPF map" tocid="e9f559c7-394c-4858-8a40-4744d2fc7200">Integrate an additional WPF map</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/6b437145-f3ed-4267-a3fc-e71737e6db65.htm" title="Add a GeoRSS Layer" tocid="6b437145-f3ed-4267-a3fc-e71737e6db65">Add a GeoRSS Layer</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/d705537f-f7fe-435c-bd80-d4d399ee4410.htm" title="Show Map&amp;Market Data" tocid="d705537f-f7fe-435c-bd80-d4d399ee4410">Show Map&amp;Market Data</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/427ab62e-f02d-4e92-9c26-31e0f89d49c5.htm" title="Show a Shape File Content" tocid="427ab62e-f02d-4e92-9c26-31e0f89d49c5">Show a Shape File Content</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2f6d7ed1-b136-44dc-97c1-3f2c640c2134.htm" title="Add a WMS Layer" tocid="2f6d7ed1-b136-44dc-97c1-3f2c640c2134">Add a WMS Layer</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fccd9937-aa04-4803-936d-7796cb966963.htm" title="Selection" tocid="fccd9937-aa04-4803-936d-7796cb966963">Selection</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/90fd0772-df3b-473b-a305-6ee939193c7f.htm" title="Apply a UI Theme" tocid="90fd0772-df3b-473b-a305-6ee939193c7f">Apply a UI Theme</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/fe48cb51-c6ce-487e-b4c0-168537c184c3.htm" title="Geocode an Address" tocid="fe48cb51-c6ce-487e-b4c0-168537c184c3">Geocode an Address</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/e7c12cc4-3819-470e-867a-b521bee43cf0.htm" title="Elementary Routing" tocid="e7c12cc4-3819-470e-867a-b521bee43cf0">Elementary Routing</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/e4c416a0-9573-4df8-b733-3bf72539ef0f.htm" title="Drag&amp;Drop Routing" tocid="e4c416a0-9573-4df8-b733-3bf72539ef0f">Drag&amp;Drop Routing</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/34f6b520-454f-4a6a-b0ae-00fc77da512b.htm" title="Tour Planning" tocid="34f6b520-454f-4a6a-b0ae-00fc77da512b">Tour Planning</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/eb8e522c-5ed2-4481-820f-bfd74ee2aeb8.htm" title="Use the Map Gadgets" tocid="eb8e522c-5ed2-4481-820f-bfd74ee2aeb8">Use the Map Gadgets</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/fdaa5363-b092-43cc-950e-6f120dee0d92.htm" title="Set the Map Location" tocid="fdaa5363-b092-43cc-950e-6f120dee0d92">Set the Map Location</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/b55f5d50-a421-4951-bc01-d5fb85c94f54.htm" title="Add an XMapServer Layer" tocid="b55f5d50-a421-4951-bc01-d5fb85c94f54">Add an XMapServer Layer</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/91617b6b-1086-4c05-a1ce-4c64f8bc7dcd.htm" title="Add a Custom Layer" tocid="91617b6b-1086-4c05-a1ce-4c64f8bc7dcd">Add a Custom Layer</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/88521cb3-0770-4f9c-9e47-74b6ea02b6eb.htm" title="Build an ActiveX Control" tocid="88521cb3-0770-4f9c-9e47-74b6ea02b6eb">Build an ActiveX Control</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/1cdf95ec-699c-4d92-bc98-df93503e5a4e.htm" title="Build a C++/MFC application" tocid="1cdf95ec-699c-4d92-bc98-df93503e5a4e">Build a C++/MFC application</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Show a Shape File Content</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>
        This page explains the <span class="term">ShapeFile</span> use case which is provided with PTV xServer .NET.
        The Shape File sample shows how shape files can be displayed.
      </p><p>This page contains the following sections:</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#ImportantConcepts">Important concepts</a></li><li class="outlineSectionEntry"><a href="#SectionCreateLayer">Creating and configuring a layer instance</a></li><li class="outlineSectionEntry"><a href="#SectionTiledProvider">Using a tiled provider</a></li><li class="outlineSectionEntry"><a href="#SectionCanvas">Using a canvas and implementing selection</a></li><li class="outlineSectionEntry"><a href="#UseCases">Use case manual</a></li><li class="outlineSectionEntry"><a href="#seeAlsoSection">See Also</a></li></ul></div><div class="collapsibleAreaRegion" id="ImportantConcepts"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Important concepts</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
          The <span class="term">ShapeFile</span> source code uses the <a href="http://sharpmap.codeplex.com/documentation" target="_blank">SharpMap.Map</a>
          to display the shapes from a shape file.
          For more details about SharpMap see
          <a href="http://sharpmap.codeplex.com/documentation" title="SharpMap website" target="_blank">their website</a>.
        </p></div><div class="collapsibleAreaRegion" id="SectionCreateLayer"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Creating and configuring a layer instance</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          A <a href="T_Ptv_XServer_Controls_Map_Layers_Tiled_TiledLayer.htm">TiledLayer</a> instance is used as the container for the shapes
          of this use case. More details about the tiled provider and canvas implementations will be discussed in the sections below.
        </p><p>
          First, a layer is created, configured and added to the map. The following code shows how to
        </p><ul><li><p>
              load an icon for the layer (see the <a href="eb8e522c-5ed2-4481-820f-bfd74ee2aeb8.htm">Layers Control in the Map Gadgets topic</a>)
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAADDAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAADDAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAADDAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAADDAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> icon = ResourceHelper.LoadBitmapFromResource(<span class="highlight-literal">"PTV xServer .NET Demo Center;component/Resources/SharpMapLogo.png"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAADDAEAAA");</script></li><li><p>
              locate the shape file
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAACDAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAACDAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAACDAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAACDAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> shapeFilePath = System.IO.Path.Combine(AppDomain.CurrentDomain.BaseDirectory, <span class="highlight-literal">@"Resources\ShapeData"</span>) +
    <span class="highlight-literal">@"\world_countries_boundary_file_world_2002.shp"</span>;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAACDAEAAA");</script></li><li><p>
              insert the new layer on top of the background layer
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAABDAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAABDAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAABDAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAABDAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">int</span> idx = wpfMap.Layers.IndexOf(wpfMap.Layers[<span class="highlight-literal">"Background"</span>]) + <span class="highlight-number">1</span>;

wpfMap.AddShapeLayer(<span class="highlight-literal">"ShapeFile"</span>, shapeFilePath, idx, <span class="highlight-keyword">true</span>, .<span class="highlight-number">8</span>, icon);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAABDAEAAA");</script></li><li><p>
              and zoom to a specific location
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAADAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAADAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAADAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAADAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// zoom to Karlsruhe</span>
wpfMap.SetMapLocation(<span class="highlight-keyword">new</span> Point(<span class="highlight-number">8.4</span>, <span class="highlight-number">49</span>), <span class="highlight-number">5</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAADAEAAA");</script></li></ul><p>
          The instantiation of the layer and its tiled provider and canvas is done by the extension method
          <a href="M_Ptv_XServer_Demo_ShapeFile_SharpMapExtensions_AddShapeLayer.htm">AddShapeLayer(WpfMap, String, String, Int32, Boolean, Double, BitmapImage)</a>.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EABAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EABAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> AddShapeLayer(<span class="highlight-keyword">this</span> WpfMap wpfMap, <span class="highlight-keyword">string</span> name, <span class="highlight-keyword">string</span> shapeFilePath, <span class="highlight-keyword">int</span> idx, <span class="highlight-keyword">bool</span> isBaseMapLayer, <span class="highlight-keyword">double</span> opacity, System.Windows.Media.Imaging.BitmapImage icon)
{
    <span class="highlight-comment">// the collection of selected elements</span>
    <span class="highlight-keyword">var</span> selectedRegions = <span class="highlight-keyword">new</span> System.Collections.ObjectModel.ObservableCollection&lt;System.Windows.Media.Geometry&gt;();

    <span class="highlight-comment">// add a layer which uses SharpMap (by using SharpMapTiledProvider and ShapeSelectionCanvas)</span>
    <span class="highlight-preprocessor">#region</span> doc:create TiledLayer
    <span class="highlight-keyword">var</span> sharpMapLayer = <span class="highlight-keyword">new</span> TiledLayer(name)
    {
        <span class="highlight-comment">// Create canvas categories. First one for the ordinary tile content. Second one for the selection canvas.</span>
        CanvasCategories = <span class="highlight-keyword">new</span>[] { CanvasCategory.Content, CanvasCategory.SelectedObjects },
        <span class="highlight-comment">// Create delegates for the content canvas and the selection canvas.</span>
        CanvasFactories = <span class="highlight-keyword">new</span> BaseLayer.CanvasFactoryDelegate[]
            {
                m =&gt; <span class="highlight-keyword">new</span> TiledCanvas(m, <span class="highlight-keyword">new</span> SharpMapTiledProvider(shapeFilePath)) { IsTransparentLayer = <span class="highlight-keyword">true</span> },
                m =&gt; <span class="highlight-keyword">new</span> ShapeSelectionCanvas(m, shapeFilePath, selectedRegions)
            },
        <span class="highlight-comment">// Set some more initial values...</span>
        Opacity = opacity,
        IsBaseMapLayer = isBaseMapLayer,
        Icon = icon
    };
    <span class="highlight-preprocessor">#endregion</span> <span class="highlight-comment">// doc:create TiledLayer</span>

    wpfMap.Layers.Insert(idx, sharpMapLayer);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABAEAAA");</script><p>
          The main functionality is contained in the <a href="T_Ptv_XServer_Demo_ShapeFile_SharpMapTiledProvider.htm">SharpMapTiledProvider</a>
          and the <a href="T_Ptv_XServer_Demo_ShapeFile_ShapeSelectionCanvas.htm">ShapeSelectionCanvas</a> classes.
          See the <a href="#SectionTiledProvider">tiled provider</a> and <a href="#SectionCanvas">canvas</a> sections for
          implementation details.
        </p></div><div class="collapsibleAreaRegion" id="SectionTiledProvider"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Using a tiled provider</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
          The <a href="T_Ptv_XServer_Demo_ShapeFile_SharpMapTiledProvider.htm">SharpMapTiledProvider</a> implements the
          <a href="T_Ptv_XServer_Controls_Map_Layers_Tiled_ITiledProvider.htm">ITiledProvider</a> interface. Its method
          <a href="M_Ptv_XServer_Demo_ShapeFile_SharpMapTiledProvider_GetImageStream.htm">GetImageStream(Int32, Int32, Int32)</a>
          creates the images which the layer requests and returns them wrapped in a <a href="http://msdn2.microsoft.com/en-us/library/8f86tw9e" target="_blank">Stream</a>.
        </p><p>
          As can be seen, the method is called for each tile to be displayed in the layer, addressed by the X and Y coordinates and the
          zoom level. Note that this means that for each tile also a SharpMap instance is created and configured for rendering.
        </p><p>
          The X and Y coordinates are converted to Mercator coordinates and the SharpMap instance is zoomed to exactly the requested tile before
          the PNG image is rendered and written to the MemoryStream.
        </p><p>
          By zooming to a specific tile, the <a href="http://sharpmap.codeplex.com/documentation" target="_blank">SharpMap.Layers.VectorLayer</a>
          knows which data row to load from the <a href="http://sharpmap.codeplex.com/documentation" target="_blank">SharpMap.Data.Providers.ShapeFile</a>.
          This is the case because the <a href="http://sharpmap.codeplex.com/documentation" target="_blank">SharpMap.Data.Providers.ShapeFile</a>
          has been assigned inline to the <a href="http://sharpmap.codeplex.com/documentation" target="_blank">SharpMap.Layers.VectorLayer.DataSource</a>
          property after the VectorLayer constructor call.
        </p><p>
          There are some special concepts in the following code (like e.g. inline assignment, lambda expressions, SharpMap logic) which imply
          a lot of functionality. These concepts are a way for an elegant and a clearly arranged implementation.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;inheritdoc/&gt;</span>
<span class="highlight-keyword">public</span> Stream GetImageStream(<span class="highlight-keyword">int</span> x, <span class="highlight-keyword">int</span> y, <span class="highlight-keyword">int</span> zoom)
{

    <span class="highlight-comment">// create a transparent sharpmap map with a size of 256x256</span>
    <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> sharpMap = <span class="highlight-keyword">new</span> SharpMap.Map(<span class="highlight-keyword">new</span> Size(<span class="highlight-number">256</span>, <span class="highlight-number">256</span>)) { BackColor = Color.Transparent })
    {
        <span class="highlight-comment">// the map contains only one layer</span>
        <span class="highlight-keyword">var</span> countries = <span class="highlight-keyword">new</span> VectorLayer(<span class="highlight-literal">"WorldCountries"</span>)
        {
            <span class="highlight-comment">// set tranform to WGS84-&gt;Spherical_Mercator</span>
            CoordinateTransformation = TransformToMercator(GeographicCoordinateSystem.WGS84),

            <span class="highlight-comment">// set the sharpmap provider for shape files as data source</span>
            DataSource = <span class="highlight-keyword">new</span> SharpMap.Data.Providers.ShapeFile(shapeFile),

            <span class="highlight-comment">// use a dynamic style for thematic mapping</span>
            <span class="highlight-comment">// the lambda also takes the map instance into account (to scale the border width)</span>
            Theme = <span class="highlight-keyword">new</span> CustomTheme(row =&gt; GetPopDensStyle(sharpMap.PixelSize, row))
        };

        <span class="highlight-comment">// add the layer to the map</span>
        sharpMap.Layers.Add(countries);

        <span class="highlight-comment">// calculate the bbox for the tile key and zoom the map </span>
        sharpMap.ZoomToBox(TileToMercatorAtZoom(x, y, zoom));

        <span class="highlight-comment">// render the map image</span>
        <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> img = sharpMap.GetMap())
        {
            <span class="highlight-comment">// stream the image to the client</span>
            <span class="highlight-keyword">var</span> memoryStream = <span class="highlight-keyword">new</span> MemoryStream();

            <span class="highlight-comment">// Saving a PNG image requires a seekable stream, first save to memory stream </span>
            <span class="highlight-comment">// http://forums.asp.net/p/975883/3646110.aspx#1291641</span>
            img.Save(memoryStream, ImageFormat.Png);
            memoryStream.Seek(<span class="highlight-number">0</span>, SeekOrigin.Begin);
            <span class="highlight-keyword">return</span> memoryStream;
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACADAAA");</script><p>
            For coloring the layer data, the private method 'Ptv.XServer.Demo.ShapeFile.SharpMapTiledProvider.GetPopDensStyle(System.Double,SharpMap.Data.FeatureDataRow)'
            returns the appropriate <a href="http://sharpmap.codeplex.com/documentation" target="_blank">SharpMap.Styles.VectorStyle</a>.
          This style is then used by SharpMap to render the content. For more details on the SharpMap types see
          <a href="http://sharpmap.codeplex.com/documentation" title="SharpMap website" target="_blank">their website</a>.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt; Demonstrates the use of dynamic styles (themes) for vector layers. In this case we </span>
<span class="highlight-comment">/// use the population density to color the shape to draw.&lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="pixelSize"&gt; The pixel size of the map. &lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;param name="row"&gt; The currently processed data row. &lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;returns&gt; A VectorStyle which is used to style the shape to draw. &lt;/returns&gt;</span>
<span class="highlight-keyword">private</span> VectorStyle GetPopDensStyle(<span class="highlight-keyword">double</span> pixelSize, DataRow row)
{
    <span class="highlight-keyword">float</span> scale;

    <span class="highlight-keyword">try</span>
    {
        <span class="highlight-comment">// colorize the polygon according to buying power;</span>
        <span class="highlight-keyword">var</span> pop = Convert.ToDouble(row[<span class="highlight-literal">"POP2005"</span>], NumberFormatInfo.InvariantInfo);
        <span class="highlight-keyword">var</span> area = Convert.ToDouble(row[<span class="highlight-literal">"AREA"</span>], NumberFormatInfo.InvariantInfo);
        <span class="highlight-comment">// compute a scale [0..1] for the population density</span>
        scale = (<span class="highlight-keyword">float</span>)((area &gt; <span class="highlight-number">0</span>) ? Math.Min(<span class="highlight-number">1.0</span>, Math.Sqrt(pop / area) / <span class="highlight-number">70</span>) : <span class="highlight-number">-1.0</span>f);
    }
    <span class="highlight-keyword">catch</span> (Exception)
    {
        scale = <span class="highlight-number">-1.0</span>f;
    }

    <span class="highlight-keyword">var</span> fillColor = scale &lt; <span class="highlight-number">0</span> ? Color.Gray : ColorBlend.ThreeColors(Color.Green, Color.Yellow, Color.Red).GetColor(scale);

    <span class="highlight-comment">// make fill color alpha-transparent</span>
    fillColor = Color.FromArgb(<span class="highlight-number">180</span>, fillColor.R, fillColor.G, fillColor.B);

    <span class="highlight-comment">// set the border width depending on the map scale</span>
    <span class="highlight-keyword">var</span> pen = <span class="highlight-keyword">new</span> Pen(Brushes.Black, (<span class="highlight-keyword">int</span>)(<span class="highlight-number">50.0</span> / pixelSize)) { LineJoin = System.Drawing.Drawing2D.LineJoin.Round };

    <span class="highlight-keyword">return</span> <span class="highlight-keyword">new</span> VectorStyle { Outline = pen, EnableOutline = <span class="highlight-keyword">true</span>, Fill = <span class="highlight-keyword">new</span> SolidBrush(fillColor) };
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAADAAA");</script></div><div class="collapsibleAreaRegion" id="SectionCanvas"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Using a canvas and implementing selection</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
          To add a new shape layer, the
          <a href="M_Ptv_XServer_Demo_ShapeFile_SharpMapExtensions_AddShapeLayer.htm">AddShapeLayer(WpfMap, String, String, Int32, Boolean, Double, BitmapImage)</a>
          method can be used as described in the first section of this page (<a href="#SectionCreateLayer">layer instantiation</a>).
          In this method there are two canvases which are created for the shape layer.
          The two canvases are a <a href="T_Ptv_XServer_Controls_Map_Layers_Tiled_TiledCanvas.htm">TiledCanvas</a>
          and a <a href="T_Ptv_XServer_Demo_ShapeFile_ShapeSelectionCanvas.htm">ShapeSelectionCanvas</a>.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EABACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EABACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> sharpMapLayer = <span class="highlight-keyword">new</span> TiledLayer(name)
{
    <span class="highlight-comment">// Create canvas categories. First one for the ordinary tile content. Second one for the selection canvas.</span>
    CanvasCategories = <span class="highlight-keyword">new</span>[] { CanvasCategory.Content, CanvasCategory.SelectedObjects },
    <span class="highlight-comment">// Create delegates for the content canvas and the selection canvas.</span>
    CanvasFactories = <span class="highlight-keyword">new</span> BaseLayer.CanvasFactoryDelegate[]
        {
            m =&gt; <span class="highlight-keyword">new</span> TiledCanvas(m, <span class="highlight-keyword">new</span> SharpMapTiledProvider(shapeFilePath)) { IsTransparentLayer = <span class="highlight-keyword">true</span> },
            m =&gt; <span class="highlight-keyword">new</span> ShapeSelectionCanvas(m, shapeFilePath, selectedRegions)
        },
    <span class="highlight-comment">// Set some more initial values...</span>
    Opacity = opacity,
    IsBaseMapLayer = isBaseMapLayer,
    Icon = icon
};</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABACAAA");</script><ul><li><p>
              The <a href="T_Ptv_XServer_Controls_Map_Layers_Tiled_TiledCanvas.htm">TiledCanvas</a>
              requests the images to display from the
              <a href="#SectionTiledProvider">TileServer (see the corresponding section)</a> and draws
              them into the layer.
            </p></li><li><p>
              The <a href="T_Ptv_XServer_Demo_ShapeFile_ShapeSelectionCanvas.htm">ShapeSelectionCanvas</a>
              handles the user input (mouse click in this case) and interprets them as selections in the layer.
            </p><p>
              The MouseDown event of the map is handled by checking which region has been clicked and updating the
              <a href="http://msdn2.microsoft.com/en-us/library/ms668604" target="_blank">ObservableCollection<span id="LST541007B0_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST541007B0_0?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>T<span id="LST541007B0_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST541007B0_1?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> of
              selected objects.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAEAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAEAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAEAAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAEAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> map_MouseDown(<span class="highlight-keyword">object</span> sender, MouseButtonEventArgs e)
{
    <span class="highlight-keyword">if</span> (!(e.ChangedButton == MouseButton.Left &amp;&amp; e.ButtonState == MouseButtonState.Pressed))
        <span class="highlight-keyword">return</span>;

    <span class="highlight-keyword">var</span> canvasPoint = e.GetPosition(<span class="highlight-keyword">this</span>);
    System.Windows.Point wgsPoint = CanvasToGeo(canvasPoint);
    <span class="highlight-keyword">var</span> ds = <span class="highlight-keyword">new</span> FeatureDataSet();

    geometries.Clear();
    <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> shpFile = <span class="highlight-keyword">new</span> SharpMap.Data.Providers.ShapeFile(shapeFilePath))
    {
        shpFile.Open();
        shpFile.ExecuteIntersectionQuery(<span class="highlight-keyword">new</span> BoundingBox(wgsPoint.X, wgsPoint.Y, wgsPoint.X, wgsPoint.Y), ds);

        <span class="highlight-comment">//if selected any object</span>
        <span class="highlight-keyword">if</span> (ds.Tables[<span class="highlight-number">0</span>].Rows.Count &lt;= <span class="highlight-number">0</span>) <span class="highlight-keyword">return</span>;

        <span class="highlight-keyword">using</span> (<span class="highlight-keyword">var</span> geomProvider = <span class="highlight-keyword">new</span> GeometryProvider(ds.Tables[<span class="highlight-number">0</span>]))
        {
            geomProvider.Open();
            <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> geoItem <span class="highlight-keyword">in</span> geomProvider.Geometries)
            {
                <span class="highlight-keyword">var</span> geometry = WkbToWpf.Parse(geoItem.AsBinary(), GeoToCanvas);
                <span class="highlight-keyword">if</span> (geometry.FillContains(canvasPoint))
                    geometries.Add(geometry);
            }
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAEAAACAAA");</script><p>
              A change of the selected objects collection, in turn, triggers an update of the canvas reflecting the current selection.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACAAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> UpdateSelection()
{
    Children.Clear();

    <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> geometry <span class="highlight-keyword">in</span> geometries)
        Children.Add(<span class="highlight-keyword">new</span> System.Windows.Shapes.Path { Fill = System.Windows.Media.Brushes.Blue, Data = geometry });
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACAAACAAA");</script><p>
              A selected region is painted blue.
            </p><div class="mediaCenter"><img alt="Shape File Selection" src="../media/ShapeFileSelection.png" /><div class="caption">Shape File demo selection</div></div></li></ul></div><div class="collapsibleAreaRegion" id="UseCases"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Use case manual</span></div><div id="ID5RBSection" class="collapsibleSection"><p>This section describes the <span class="term">Shape File</span> use case in the Demo Center sample.</p><h4 class="subHeading" id="UseCase1">How to display the Shape File on the map</h4><div class="subsection"><p>
              The <span class="term">Shape File</span> use case shows how to display, animate and handle events for shape file data. When
              starting the demo application, the shapes can be seen, if the checkbox is activated in the <span class="term">Shape File</span> expander.
              Clicking in the map shows the selection of single areas.
            </p><div class="mediaCenter"><img alt="Shape File" src="../media/ShapeFile.png" /><div class="caption">Shape File use case</div></div></div></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Ptv_XServer_Controls_Map_Layers_Shapes_ShapeLayer.htm">ShapeLayer</a></div><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="06a654f3-afbd-4f00-9c8e-36997e2a3951.htm">Shape Layer Concept</a></div><div class="seeAlsoStyle"><a href="efdeef71-8995-49a7-b15c-01f3dd65a3c8.htm">Custom Layers Concept</a></div></div></div></div><div id="pageFooter" class="pageFooter">Visit our website at <a href="http://www.ptvgroup.com">www.ptvgroup.com</a> or browse to <a href="http://xserver.ptvgroup.com">xserver.ptvgroup.com</a> for the latest information on our developer components.<p>Copyright (c) PTV Group, Karlsruhe, Germany.</p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:developer%40ptvgroup.com?Subject=PTV xServer .NET">developer@ptvgroup.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>